version: "3.9"

services:
  # -----------------------
  # Frontend: React App
  # -----------------------
  frontend:
    build:
      context: ./frontend/react-app
      dockerfile: ../../Dockerfile
      args:
        BASE: node:18
    volumes:
      - ./frontend/react-app:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm start"
    ports:
      - "5173:5173"

  # -----------------------
  # Backend: Node/Express
  # -----------------------
  node-backend:
    build:
      context: ./backend/node-express
      dockerfile: ../../Dockerfile
      args:
        BASE: node:18
    volumes:
      - ./backend/node-express:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    ports:
      - "4000:4000"

  # -----------------------
  # Backend: Python Service
  # -----------------------
  python-backend:
    build:
      context: ./backend/python-flask
      dockerfile: ../../Dockerfile
      args:
        BASE: python:3.11
    volumes:
      - ./backend/python-flask:/app
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && python app.py"
    ports:
      - "5000:5000"

  # -----------------------
  # Databases
  # -----------------------
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: unpaydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  # -----------------------
  # Kafka
  # -----------------------
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  # -----------------------
  # Grafana
  # -----------------------
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"   # Grafana accessible at http://localhost:3001
    volumes:
      - grafana-data:/var/lib/grafana

# -----------------------
# Volumes
# -----------------------
volumes:
  pgdata:
  grafana-data:
